version: '3.2'

services:
  op:
    build: 
      context: op
      args:
        OP_IP: $OP_IP
        SUBJECT_ALT_NAME_TYPE: $SUBJECT_ALT_NAME_TYPE
    restart: always
    network_mode: "host"
    init: true
    environment:
      TLS_SIGN: $TLS_SIGN
      JWT_SIGN: $JWT_SIGN
      OP_IP: $OP_IP
      RP_IP: $RP_IP
      LOG_LEVEL: $LOG_LEVEL #NOTSET, DEBUG, INFO, WARNING, ERROR, CRITICAL, default to CRITICAL
      SAVE_TLS_DEBUG: $SAVE_TLS_DEBUG
      TIMEOUT: $TIMEOUT
    volumes:
      - type: bind
        source: ./op/app
        target: /app
      - $PWD/op_certs:/op_certs

  op_clone:
    image: ubuntu-op
    network_mode: "host"
    init: true
    environment:
      TLS_SIGN: $TLS_SIGN
      JWT_SIGN: $JWT_SIGN
      OP_IP: $OP_IP
      RP_IP: $RP_IP
      LOG_LEVEL: $LOG_LEVEL #NOTSET, DEBUG, INFO, WARNING, ERROR, CRITICAL, default to CRITICAL
      SAVE_TLS_DEBUG: $SAVE_TLS_DEBUG
      TIMEOUT: $TIMEOUT
    volumes:
      - type: bind
        source: ./op_clone/app
        target: /app
      - $PWD/op_certs:/op_certs  
    
  op-tcpdump:
    image: nicolaka/netshoot
    command: nice -20 tcpdump -B 204800 -i any "tcp and (src ${RP_IP} or dst ${RP_IP} or src ${OP_IP} or dst ${OP_IP})" -w /data/$TLS_SIGN.pcap
    environment:
      OP_IP: $OP_IP
      RP_IP: $RP_IP
      TLS_SIGN: $TLS_SIGN
    network_mode: host
    volumes:
      - $PWD/op/tcpdump:/data
    depends_on:
      - op
      
  rp:
    build: 
      context: rp
      args:
        RP_IP: $RP_IP
        OP_IP: $OP_IP
        SUBJECT_ALT_NAME_TYPE: $SUBJECT_ALT_NAME_TYPE
    restart: always
    network_mode: "host"
    init: true
    environment:
      TLS_SIGN: $TLS_SIGN
      JWT_SIGN: $JWT_SIGN
      RP_IP: $RP_IP
      OP_IP: $OP_IP
      LOG_LEVEL: $LOG_LEVEL
      SAVE_TLS_DEBUG: $SAVE_TLS_DEBUG
      TIMEOUT: $TIMEOUT
    volumes:
      - type: bind
        source: ./rp/app
        target: /app
      - $PWD/rp_certs:/rp_certs
      - $PWD/op_certs:/op_certs
      
  user_agent:
    build: user_agent
    network_mode: "host"
    init: true
    environment:
      TLS_SIGN: $TLS_SIGN
      JWT_SIGN: $JWT_SIGN
      RP_IP: $RP_IP
      OP_IP: $OP_IP
      DELAY_START: $DELAY_START
      DELAY_BETWEEN: $DELAY_BETWEEEN
      REPEAT: $REPEAT
      LOG_LEVEL: $LOG_LEVEL
      TEST: $TEST
      SAVE_TLS_DEBUG: $SAVE_TLS_DEBUG
      TIMEOUT: $TIMEOUT
    volumes:
      - type: bind
        source: ./user_agent/app
        target: /app
      - $PWD/rp_certs:/rp_certs:ro
      - $PWD/op_certs:/op_certs
    
  user_agent-tcpdump:
    image: nicolaka/netshoot
    command: nice -20 tcpdump -B 204800 -i any "tcp and (src ${RP_IP} or dst ${RP_IP} or src ${OP_IP} or dst ${OP_IP})" -w /data/${TLS_SIGN}.pcap
    network_mode: service:user_agent
    environment:
      TLS_SIGN: $TLS_SIGN
      RP_IP: $RP_IP
      OP_IP: $OP_IP
    volumes:
      - $PWD/user_agent/tcpdump:/data
    depends_on:
      - user_agent
